#Add an automobile dataset to BigQuery and create a table to clean data for car sales automobile data

#1. Review sample of data table
SELECT  
  *
FROM 
  `cars.car_info` 
LIMIT 
  1000;

#2. Inspect the fuel_type as there should only be two unique string values: "diesel" and "gas"
  #Confirms consistent fuel_type outlined 
SELECT
  DISTINCT fuel_type
FROM
  `cars.car_info`;

#3. Confirm the minimum and maximum lengths in the dataset align with the data description (141.2 - 208.1)
  #Results confirm the data is representative of the outlined data description
SELECT
  MIN(length) AS min_length,
  MAX(length) AS max_length
FROM
  `cars.car_info`;

#4. Query data where values are null
  #Yields 2 results; num_of_doors is null for a dodge and mazda
SELECT
  *
FROM 
  `cars.car_info`
WHERE
  num_of_doors is NULL;

#5. Update the NULL values for dodge
UPDATE
  `cars.car_info`
SET
  num_of_doors = "four"
WHERE
  make = "dodge"
  AND fuel_type = "gas"
  AND body_style = "sedan";

#6. Confirm the NULL values have been updated 
  #Yields NULL for the mazda
SELECT 
  *
FROM
  `cars.car_info`
WHERE
  num_of_doors IS NULL;

#7. Update NULL values for mazda 
UPDATE
  `cars.car_info`
SET
  num_of_doors = "four"
WHERE
  make = "mazda"
  AND fuel_type = "diesel"
  AND body_style = "sedan";

#8. Confirm the updates in a query for NULL
  #yields no results for NULL
SELECT 
  *
FROM
  `cars.car_info`
WHERE
  num_of_doors IS NULL;

#9. Verify values in num_of_cylinders column are valid
  #There are too many rows. Two entries for two cylinder: 'two' and 'tow'
SELECT
  DISTINCT num_of_cylinders
FROM
  `cars.car_info`;

#10. Update values to correct 'tow' as 'two'
UPDATE
  `cars.car_info`
SET
  num_of_cylinders = "two"
WHERE
  num_of_cylinders = "tow";

#11. Confirm two cylinder value updates 
  #Query shows correct range of values 
SELECT 
  DISTINCT num_of_cylinders
FROM
  `cars.car_info`;

#12. Validate the compression_ration column values: should range from 7 - 23
  #returns maximum of 70
SELECT
  MIN(compression_ratio) AS min_compression_ratio,
  MAX(compression_ratio) AS max_compression_ratio
FROM
  `cars.car_info`;

#13. Rerun query without row with maximum 70 to make sure the rest of the data does not exceed 23
  #Yields maximum of 23
SELECT
  MIN(compression_ratio) AS min_compression_ratio,
  MAX(compression_ratio) AS max_compression_ratio
FROM
  `cars.car_info`
WHERE
  compression_ratio <> 70;

#14. Inquire how many rows contain the error of compression_ration 70
  #There is only one row with the value 70
SELECT
   COUNT(*) AS num_of_rows_to_delete
FROM
  `cars.car_info`
WHERE
   compression_ratio = 70;

#15. Delete the row with value 70
DELETE `cars.car_info`
WHERE compression_ratio=70;

#16. Query drive_wheels column for inconsistencies
  #"4wd" appears twice in the results
SELECT
  DISTINCT drive_wheels
FROM
  `cars.car_info`;

#17. Verify the length of the string variables
  #sometimes 4wd has four characters instead three 
SELECT 
  DISTINCT drive_wheels,
  LENGTH(drive_wheels) AS string_length
FROM
  `cars.car_info`;

#18. Trim the extra spaces from "4wd"
UPDATE
  `cars.car_info`
SET
  drive_wheels = TRIM(drive_wheels)
WHERE TRUE;

#19. Rerun SELECT DISTINCT statement again to validate there are only three distinct values in drive_wheels
  #Yields three string variables in drive_wheels 
SELECT
  DISTINCT drive_wheels
FROM
  `cars.car_info`;
