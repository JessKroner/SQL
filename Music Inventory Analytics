#In this SQL, I'm quering a database through multiple tables to analyze the inventory data & customers. 

#1. Query artists, their albums, album genre and how many tracks are on each album:
SELECT artists.name Artist, genres.name Genre, albums.title Album,
COUNT(tracks.albumid) Tracks_Per_Album
FROM chinook.genres
JOIN chinook.tracks
ON genres.genreid=tracks.genreid
JOIN chinook.albums
ON albums.albumid=tracks.albumid
JOIN chinook.artists
ON albums.artistid=artists.artistid GROUP BY album

#2. Find the id number for the playlist "Grunge":
SELECT * FROM chinook.playlists WHERE name="Grunge";

#3. What songs are on the Grunge playlist? 
SELECT tracks.name Grunge_Playlist
FROM chinook.tracks
JOIN chinook.playlist_track
ON tracks.trackid=playlist_track.trackid WHERE playlistid="16"

#4. How much will it cost to purchase the grunge playlist? 
SELECT SUM(tracks.unitprice) Grunge_Playlist
FROM chinook.tracks
JOIN chinook.playlist_track
ON tracks.trackid=playlist_track.trackid WHERE playlistid="16";

#5. Which customer has spent the most money and how many purchases did they make? 
SELECT customers.firstname First_Name, customers.lastname Last_Name, SUM(invoices.total) Total_Purchased, COUNT(invoices.invoiceid) Invoices
FROM chinook.invoices
JOIN chinook.customers
ON invoices.customerid=customers.customerid 
WHERE customers.customerid = "6" GROUP BY invoices.customerid;

#6. Query all of the invoice numbers, dates and totals for the customer that spent the most money:
SELECT invoices.invoiceid Invoice_Number, customers.firstname First_Name, 
customers.lastname Last_Name, invoices.invoicedate Date, invoices.total Total
FROM chinook.invoices 
JOIN chinook.customers
ON invoices.customerid=customers.customerid WHERE customers.customerid="6";

#7. What is the average spent per order? 
SELECT AVG(total) Average_Order
FROM chinook.invoices;

#8. How many clients does each employee have? 
SELECT e.firstname First_Name, e.lastname Last_Name, e.title, COUNT(c.customerid) Clients
FROM chinook.employees e
JOIN chinook.customers c
ON e.employeeid=c.supportrepid GROUP BY e.employeeid;

#9. What genre has the most tracks and how many tracks are in the database? 
SELECT g.name, COUNT(t.genreid) Total_Tracks
FROM chinook.genres g
JOIN chinook.tracks t
ON g.genreid=t.genreid
GROUP BY g.name ORDER BY total DESC LIMIT 1;
