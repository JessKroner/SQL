#In this SQL, I'm quering a database with multiple tables to quantify statistics about customers and order data.

#1. How many orders were placed in January? 
SELECT COUNT(orderID) AS Total_Number_of_Jan_Sales FROM BIT_DB.JanSales;

#2. How many of those orders were for an iPhone? 

SELECT product, COUNT(product) AS Total_Units_Sold 
FROM BIT_DB.JanSales WHERE product = "iPhone";

#3. SElect the customer account numbers for all the orders that were placed in February:
SELECT customers.acctnum, FebSales.orderdate, FebSales.Quantity, FebSales.Product, FebSales.price 
FROM BIT_DB.customers 
JOIN BIT_DB.FebSales 
ON customers.acctnum = FebSales.orderID;

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product, price 
FROM BIT_DB.JanSales
WHERE price IN (SELECT min(price) FROM BIT_DB.JanSales);

#5. What is the total revenue for each product sold in January? 
SELECT product, SUM(Quantity)*price AS Revnue 
FROM BIT_DB.JanSales GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity) AS Total_Units_Sold, SUM(quantity)*price AS Total_Revenue 
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101' GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(customers.acctnum) AS Number_of_Customers, AVG(Feb.quantity)*price AS Average_Spent 
FROM BIT_DB.FebSales Feb
LEFT JOIN customers 
ON Feb.orderID = customers.order_id
WHERE feb.quantity>2;

#8. Query dates between 2/13/19 and 2/18/19:
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

#9. Where  was the order that was placed on 2/18/19 01:35? 
SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

#10. How many products were ordered on 2/18/19?
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

#11: How many of each product were sold at the Los Angeles loation? 
SELECCT products, quantity 
FROM BIT_DB.FEBSales 
WHERE location LIKE '%los Angeles%';

#12. List all the products and how many of each were sold in Los Angeles during February:
SELECT product, SUM(quantity) AS Units_Sold 
FROM BIT_DB.FebSales 
WHERE location LIKE '%los Angeles%' 
GROUP BY product;

#13. How many locations in New York had more than 1 product in January? 
SELECT count(distinct location) AS Locations
FROM BIT_DB.JanSales
WHERE location like '%NY%'
AND quantity>1;

#14. How many of each type of headphones were sold in February? 
SELECT SUM(quantity) AS Units_Sold, Product 
FROM BIT_DB.FebSales 
WHERE product LIKE '%headphones%' GROUP BY product;

#15. What is the average amount spent per account in February?
SELECT AVG(quantity*price) AS AVG_Spent_Per_Account
FROM BIT_DB.FebSales F
LEFT JOIN BIT_DB.customers c
ON F.orderid=c.order_id;

#16. What was the average quantity of products purchased per account in February?
SELECT SUM(quantity)/COUNT(c.acctnum)
FROM BIT_DB.FebSales F
LEFT JOIN BIT_DB.customers c
ON F.orderid=c.order_id;

#17. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, SUM(quantity*price)
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY sum(quantity*price) DESC LIMIT 1;
